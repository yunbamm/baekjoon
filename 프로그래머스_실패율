#include <string>
#include <vector>
#include <queue>
#include <iostream>

using namespace std;

//실패율 : 스테이지 도달했으나 아직 클리어 X / 스테이지 도달한 플레이어 수
//N : 전체 스테이지 수 , stages : 사용자가 현재 멈춰있는 스테이지
//실패율이 높은 스테이지부터 내림차순
//실패율이 같다면 작은번호 먼저
//스테이지 도달한 사람이 없으면 0

double not_clear[502];
double reach_player[502];
double fail_rate[502];

vector<int> solution(int N, vector<int> stages) {

	for (int i = 0; i < stages.size(); i++) {
		int now = stages[i];
		for (int j = 1; j <= now; j++) reach_player[j]++;
		not_clear[now]++;
	}
	vector<int> answer;
	priority_queue<pair<double, int>> pq;

	for (int i = 1; i <= N; i++) {
		if (reach_player[i] == 0) fail_rate[i] = 0;
		else fail_rate[i] = not_clear[i] / reach_player[i];
		pq.push({ fail_rate[i] , -i });
	}

	while (!pq.empty()) {
		answer.push_back(-pq.top().second);
		pq.pop();
	}
	return answer;
}
