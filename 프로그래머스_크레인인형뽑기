#include <string>
#include <vector>
#include <stack>
#include<iostream>

using namespace std;

//N*N
//크레인을 이용해 가장 위칸의 인형을 바구니로
//바구니에 같은 모양 두개면 없어진다
//1 ~ N
int N;
int arr[101][101];

//y좌표의 가장 위의 값을 구한다
int pick(vector<vector<int>> board , int y) {

	int result = 0;
	for (int x = 1; x <= N; x++) {
		if (arr[x][y] != 0) {
			result = arr[x][y];
			arr[x][y] = 0;
			break;
		}
	}
	return result;
}
int solution(vector<vector<int>> board, vector<int> moves) {

	N = board.size();

	for (int x = 1; x <= N; x++) {
		for (int y = 1; y <= N; y++) {
			arr[x][y] = board[x - 1][y - 1];
		}
	}
	stack<int> s;
	int answer = 0;

	for (int i = 0; i < moves.size(); i++) {
		int now = pick(board, moves[i]);

		if (now == 0) continue;

		if (!s.empty() && s.top() == now) {
			answer+=2;
			s.pop();
		}
		else s.push(now);

	}
	return answer;
}
