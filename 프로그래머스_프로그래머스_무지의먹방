#include <string>
#include <vector>
#include<iostream>
#include<queue>

using namespace std;

//pq를 이용한다 (-시간, index)

bool check[200000];		//true 초기화 
int N;					//음식 개수
priority_queue<pair<int, int>> pq;

int solution(vector<int> food_times, long long k) {
	N = food_times.size();

	for (int i = 0; i < N; i++) {
		pq.push({ -food_times[i] , i });
		check[i] = true;
	}

	long long now = 0, count = 0;		//now는 현재 시간 , count는 바퀴수

	//한바퀴 돌려도 되면
	while (now+pq.size() <= k) {
		count++;
		now += pq.size();
		//pq중에 시간 다쓴거 뺀다
		while (!pq.empty() && -pq.top().first <= count)
		{
			check[pq.top().second] = false;
			pq.pop();
		}

		//**pq에 없다면 무한루프 돈다
		if (pq.empty()) break;
	}
	int answer = 0;

	for (int i = 0; i < N; i++) {
		if (check[i]) {
			if (now >= k) {
				answer = i + 1;
				break;
			}
			now++;
		}
	}
	if (answer == 0) answer = -1;
	return answer;
}
